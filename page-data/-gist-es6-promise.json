{"pathnameRoot":"/","authorUrl":"https://github.com/Terry-Su","locale":"en","logoTitle":"Terry Su","noteIsAutoTranslated":"This page is translated automatically.","copyright":{"left":"Copyright Â© 2017-","center":"Terry Su","right":"ALL RIGHTS RESERVED"},"blogGithub":"https://github.com/Terry-Su/blogs","id":"gist-es6-promise","title":"Gist-ES6 Promise","path":"Technology/FrontEnd/JavaScript","route":"/gist-es6-promise","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Promise is used to `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`asynchronous computations`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h1\" components={components}>{`The concept of \"Promise\"`}</MDXTag>\n<MDXTag name=\"h1\" components={components}>{`Introduction`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\"Synchronize asynchronous methods\" is always a hot topic.Here, \"Promise\" is one way to achieve the goal.`}</MDXTag>\n<MDXTag name=\"h1\" components={components}>{`Promise Model`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Basic Promise Model`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://sfault-image.b0.upaiyun.com/513/313/513313002-5957789b7a642_articlex\",\"alt\":null}}></MDXTag>{`   `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In javascript, it's like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// #1 Create a \"Promise\" object\nconst testPromise = new Promise( (resolve, reject) => {\n  // resolve(\"parameters\") or reject(\"parameters\")\n  // example 1: setTimeout(resolve, 1000, 'parameters')\n  // example 2: setTimeout(reject, 1000, 'parameters')\n} )\n\ntestPromise.then( value => {\n    // #2 Monitor the state of \"Promise\", if state is \"fulfilled\"\n},  value => {\n    // #2 Monitor the state of \"Promise\", if state is \"rejected\"\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Chaining promise model`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://sfault-image.b0.upaiyun.com/707/453/707453890-595778c082448_articlex\",\"alt\":null}}></MDXTag>{`  `}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const testPromise = new Promise( (resolve, reject) => {\n  // set the state of \"Promise\" to \"fulfilled\"\n  resolve()\n} )\n\ntestPromise\n    .then( value => {\n        // Continue to create \"Promise\"\n        return new Promise( (resolve, reject) => {\n            resolve()\n        } )\n    }, value => {\n    })\n    .then( value => {\n        // Continue to create \"Promise\"\n        return new Promise( (resolve, reject) => {\n        resolve('parameters')\n        } )\n    }, value => {\n    })\n    .then( value => {\n        console.log(value)  // output: 'paramaters'\n    }, value => {\n    })\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components}>{`Grammar`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Initialize`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"}}>{`Promise constructor`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Chain`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\"}}>{`Promise.prototype.then()`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Catch rejected reason`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\"}}>{`Promise.prototype.catch()`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Resolve or reject parameters directly`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\"}}>{`Promise.resolve()`}</MDXTag>{`\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\"}}>{`Promise.reject()`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Queue`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"}}>{`Promise.all()`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Apply fastest promise`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\"}}>{`Promise.race`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components}>{`Conclusion`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There must be lots of ways to synchronize asynchronous methods, however, it's more convenient if a standard emerges so we can build robust program more easily.Obviously, promise is an ideal standard.`}</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1498904640000,"comment":2,"availableOtherLocales":[],"componentTextMap":{},"siteTitle":"Gist-ES6 Promise(Terry Su Blog)","siteMetaDescription":" Gist-ES6 Promise Promise is used to asynchronous computations.\n\nTHE CONCEPT OF \"PROMISE\"\nINTRODUCTION\n\"Synchronize as... (Terry Su Blog)","categoryTitle":"Category","postTimeTitle":"Post Time","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","endingWords":"Thanks for your reading. If you're from other platforms and like this article, please feel free to add thumb up, collection and sharing on the original platform, so that more people can see this article, which is also the biggest encouragement and support for me!","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"Terry Su Blog","siteMetaDescription":"Terry Su's original front-end technology blog 4 years front-end shares popular front-end technology JavaScript ReactJS","categoryNewest":"Latest Blogs","navArticles":"ARTICLES","navAbout":"ABOUT"},"articleTexts":{"endingWords":"Thanks for your reading. If you're from other platforms and like this article, please feel free to add thumb up, collection and sharing on the original platform, so that more people can see this article, which is also the biggest encouragement and support for me!","endingWordsExtra":"**Welcome to [subscribe](https://github.com/Terry-Su/blogs), to read my latest original front end techinique blog.**","qrcodeImageUrl":"","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","category":"Category","postTime":"Post Time","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","commentOnGithub":"Comment (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>Welcome to <a href=\"https://github.com/Terry-Su/blogs\">subscribe</a>, to read my latest original front end techinique blog.</strong></p>"}
