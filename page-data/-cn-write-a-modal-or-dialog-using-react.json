{"pathnameRoot":"/cn/","authorUrl":"https://github.com/Terry-Su","locale":"zh_CN","logoTitle":"苏溪云","noteIsAutoTranslated":"本文为自动翻译。","copyright":{"left":"版权 © 2017-","center":"苏溪云","right":"保留所有权利"},"blogGithub":"https://github.com/Terry-Su/blogs-cn","id":"cn/write-a-modal-or-dialog-using-react","title":"使用React手写一个对话框或模态框","path":"Technology/FrontEnd/React","route":"/cn/write-a-modal-or-dialog-using-react","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`打算用React写对话框已经很长一段时间，现在是时候兑现承诺了。实际上，写起来相当简单。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`核心在于使用React的接口`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React.createPortal(element, domContainer)`}</MDXTag>{`。该接口将`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`element`}</MDXTag>{`渲染后的DOM节点嵌入`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`domContainer`}</MDXTag>{`(通常是`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`document.body`}</MDXTag>{`)，并保证只嵌入一次。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`所以，我们可以这样写一个对话框或模态框：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`function Dialog() {\n    return React.createPortal( <div>Dialog contents</div>, document.body )\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`一个新的`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`div`}</MDXTag>{`会出现在`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`body`}</MDXTag>{`内部：\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/23733477/56560376-d86dec00-65d6-11e9-95f5-bcfb31fcf16f.png\",\"alt\":\"image\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`一个完整DEMO:`}</MDXTag>\n<ModalApp />\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`class Modal extends React.Component {\n  render() {\n    const {\n      visible,\n      onClose\n    } = this.props\n    return visible && ReactDOM.createPortal(<StyledModalRoot>\n      <div className=\"box\">\n        Content\n        <br/>\n        <button onClick={onClose}>Close</button>\n      </div>\n    </StyledModalRoot>, document.body)\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    visibleModal: false\n  }\n  showModal = () => this.setState( { visibleModal: true } )\n  handleCloseModal = () => this.setState( { visibleModal: false } )\n  render() {\n    const { visibleModal } = this.state\n    return <div style={{padding: '20px'}}>\n    <button onClick={ this.showModal }>Show Modal</button>\n    <Modal visible={visibleModal} onClose={ this.handleCloseModal } />\n  </div>\n  }\n}\n\nconst StyledModalRoot = styled.div\\`\n  position: fixed;\n  z-index: 1001;\n  left: 0;\n  top: 0;\n  display: grid;\n  place-items: center;\n  width: 100%;\n  height: 100%;\n  background: rgba( 0, 0, 0, 0.2 );\n\n  >.box {\n    position: relative;\n    display: grid;\n    place-items: center;\n    width: 80%;\n    height: 80%;\n    background: white;\n    border-radius: 10px;\n    box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12);\n  }\n\\`\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`是不是很简单?`}</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1556002800000,"comment":6,"availableOtherLocales":["en"],"componentTextMap":{"ModalApp":"\nclass Modal extends React.Component {\n  render() {\n    const {\n      visible,\n      onClose\n    } = this.props\n    return visible && ReactDOM.createPortal(<StyledModalRoot>\n      <div className=\"box\">\n        Content\n        <br/>\n        <button onClick={onClose}>Close</button>\n      </div>\n    </StyledModalRoot>, document.body)\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    visibleModal: false\n  }\n  showModal = () => this.setState( { visibleModal: true } )\n  handleCloseModal = () => this.setState( { visibleModal: false } )\n  render() {\n    const { visibleModal } = this.state\n    return <div style={{padding: '20px'}}>\n    <button onClick={ this.showModal }>Show Modal</button>\n    <Modal visible={visibleModal} onClose={ this.handleCloseModal } />\n  </div>\n  }\n}\n\nconst StyledModalRoot = styled.div`\n  position: fixed;\n  z-index: 1001;\n  left: 0;\n  top: 0;\n  display: grid;\n  place-items: center;\n  width: 100%;\n  height: 100%;\n  background: rgba( 0, 0, 0, 0.2 );\n\n  >.box {\n    position: relative;\n    display: grid;\n    place-items: center;\n    width: 80%;\n    height: 80%;\n    background: white;\n    border-radius: 10px;\n    box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12);\n  }\n`\n\nrender( <App /> )"},"siteTitle":"使用React手写一个对话框或模态框(苏溪云的博客)","siteMetaDescription":" 使用React手写一个对话框或模态框 打算用React写对话框已经很长一段时间，现在是时候兑现承诺了。实际上，写起来相当简单。\n\n核心在于使用React的接口React.createPortal(element, domContainer... (苏溪云的博客)","categoryTitle":"分类","postTimeTitle":"发布时间","reprintingNote":"作者版权所有，转载请注明出处，禁止商业转载","endingWords":"感谢你花时间阅读这篇文章。如是其他平台来的读者，喜欢这篇文章的话欢迎在原平台文章上点赞、收藏和分享，让更多的人看到这篇文章，这也是对我最大的鼓励和支持！","githubCommentBase":"https://api.github.com/repos/terry-su/blogs-cn/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs-cn/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"苏溪云的博客","siteMetaDescription":"苏溪云的原创前端技术博客 4年前端 分享主流前端技术 JavaScript ReactJS","categoryNewest":"最新文章","navArticles":"所有文章","navAbout":"关于作者"},"articleTexts":{"endingWords":"感谢你花时间阅读这篇文章。如是其他平台来的读者，喜欢这篇文章的话欢迎在原平台文章上点赞、收藏和分享，让更多的人看到这篇文章，这也是对我最大的鼓励和支持！","endingWordsExtra":"**欢迎[订阅](https://github.com/Terry-Su/blogs-cn)，第一时间阅读我的最新原创前端技术博客。**","qrcodeImageUrl":"","reprintingNote":"作者版权所有，转载请注明出处，禁止商业转载","category":"分类","postTime":"发布时间","githubIssuePageBase":"https://github.com/Terry-Su/blogs-cn/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs-cn/issues/","commentOnGithub":"添加评论 (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>欢迎<a href=\"https://github.com/Terry-Su/blogs-cn\">订阅</a>，第一时间阅读我的最新原创前端技术博客。</strong></p>"}
