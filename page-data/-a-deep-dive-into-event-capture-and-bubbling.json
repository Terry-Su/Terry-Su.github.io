{"pathnameRoot":"/","authorUrl":"https://github.com/Terry-Su","locale":"en","logoTitle":"Terry Su","noteIsAutoTranslated":"This page is translated automatically.","copyright":{"left":"Copyright Â© 2017-","center":"Terry Su","right":"ALL RIGHTS RESERVED"},"blogGithub":"https://github.com/Terry-Su/blogs","id":"a-deep-dive-into-event-capture-and-bubbling","title":"A Deep Dive into Event Capture and Bubbling","path":"Technology/FrontEnd/JavaScript","route":"/a-deep-dive-into-event-capture-and-bubbling","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Suppose there's a div with a child div in it, and both of 2 divs have registered click events. If we click on the child div, which click event of 2 divs will fire first?`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://terry-su.github.io/BlogCDN/images/blog-event-capture-bubbling/1.png\",\"alt\":null}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`That question will take us to the topic today: Event Bubbling and Capture, in which the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`three phases of event propagation`}</MDXTag>{` is the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`key`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To solve the question above, we've gotta know what event bubbling and capture are. And to know event bubbling and capture, we've to know how the dom events of dom elements fire. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As found in `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\"}}>{`W3C-Event Flow`}</MDXTag>{`, if a dom event was triggered, its event objects will pass through 3 phases to dispatch themselves to event targets(dom elements):  `}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://terry-su.github.io/BlogCDN/images/blog-event-capture-bubbling/2.png\",\"alt\":null}}></MDXTag>{`    `}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Capture phase`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`The event object passes through to the event target's ancestors from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Window`}</MDXTag>{` to the event target's parent.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`If there're other available event targets whose capture attribute is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{`, then the event object will be dispatched to them.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Target phase`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`The event object arrives the event target.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`If the event target's event type indicates the event doesn't bubble, then the event object will stop after this phase.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Bubbling Phase`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`(Reverse to capture phase)The event object passes through to the event target's ancestors from the event target's parent to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Window`}</MDXTag>{`.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`If there're other available event targets whose bubbling attribute is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{`, then the event object will be dispatched to them.`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's look back at the previous question, the answer can be clear.   `}</MDXTag>\n<iframe src=\"https://terry-su.github.io/BlogCDN/iframes/js/event-capture-bubbling/example/index.html?mode=result\"></iframe>\n<MDXTag name=\"p\" components={components}>{`In this example, each box and its inner box both have registered click events. Once they were clicked, their borders will highlight one by one by the event propagation order. With the three phases of event propagation above, we could know how the 4 situations above happened.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To make a summary: `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Browser captures the event targets whose capture attribute is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`true`}</MDXTag>{` by dom tree order first, then bubbles the event targets whose bubbling attribute is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`true`}</MDXTag>{` by reverse dom tree order`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1539332520000,"comment":12,"availableOtherLocales":[],"importedCodes":"","siteTitle":"A Deep Dive into Event Capture and Bubbling(Terry Su Blog)","siteMetaDescription":" A Deep Dive into Event Capture and Bubbling Suppose there's a div with a child div in it, and both of 2 divs have registered click events. If we... (Terry Su Blog)","categoryTitle":"Category","postTimeTitle":"Post Time","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","endingWords":"article.endingWords","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"Terry Su Blog","siteMetaDescription":"Terry Su's original front-end technology blog 4 years front-end shares popular front-end technology JavaScript ReactJS","categoryNewest":"Latest Blogs","navArticles":"ARTICLES","navAbout":"ABOUT"},"articleTexts":{"endingWordsExtra":"**Thanks for your reading. Welcome to subscribe my blog by [Github](https://github.com/Terry-Su/blogs).**","qrcodeImageUrl":"","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","category":"Category","postTime":"Post Time","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","commentOnGithub":"Comment (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>Thanks for your reading. Welcome to subscribe my blog by <a href=\"https://github.com/Terry-Su/blogs\">Github</a>.</strong></p>"}
