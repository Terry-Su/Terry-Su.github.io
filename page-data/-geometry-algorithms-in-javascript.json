{"pathnameRoot":"/","authorUrl":"https://github.com/Terry-Su","locale":"en","logoTitle":"Terry Su","noteIsAutoTranslated":"This page is translated automatically.","copyright":{"left":"Copyright Â© 2017-","center":"Terry Su","right":"ALL RIGHTS RESERVED"},"blogGithub":"https://github.com/Terry-Su/blogs","id":"geometry-algorithms-in-javascript","title":"Geometry Algorithms in Javascript","path":"Technology/Algorithm","route":"/geometry-algorithms-in-javascript","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Recently, I've been learning geo algorithms for developing a geometry library. However, I found that the materials of 2d geometry algorithms on the internet ara `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`complicated`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`messy`}</MDXTag>{` since I only want to find several basic and commonly used algorithms. Here, I will try my best to make 2d geometry algorithms below `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`easy`}</MDXTag>{` to be understood and used. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`By the way, you may not be necessary to read this article paragraph by paragraph, you can just read any topic which you prefer. Here we go!`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Transformation`}</MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Translation`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://www.tutorialspoint.com/computer_graphics/images/translation.jpg\",\"alt\":\"Image\"}}></MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`Suppose we move point's position from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(x, y)`}</MDXTag>{` to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`(x', y')`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`x ' = x + t _ x\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`y ' = y + t _ y\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Scale`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://www.tutorialspoint.com/computer_graphics/images/before_scaling.jpg\",\"alt\":\"Image\"}}></MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://www.tutorialspoint.com/computer_graphics/images/after_scaling.jpg\",\"alt\":\"Image\"}}></MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`Suppose we scale the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`x`}</MDXTag>{` of point by `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sx`}</MDXTag>{` times and the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`y`}</MDXTag>{` of point by `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sy`}</MDXTag>{` times, then:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`x ' = s _ x * x\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`y ' = s _ y * y\n`}</MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Scale point based on a center point `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`(xc, yc)`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`x ' = s _ x * x - ( s _ x * x _ c - x _ c )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`y ' = s _ y * y - ( s _ y * y _ c - y _ c )\n`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Rotation`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://www.tutorialspoint.com/computer_graphics/images/rotation.jpg\",\"alt\":\"Image\"}}></MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`Suppose we rotate `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`OP`}</MDXTag>{` to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`OP'`}</MDXTag>{`.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`Because:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`x = r \\\\cdot cos \\\\varphi\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`y = r \\\\cdot sin \\\\varphi\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`x' = r \\\\cdot cos ( \\\\varphi + \\\\theta ) = r \\\\cdot ( cos \\\\varphi \\\\cdot cos \\\\theta - sin \\\\varphi \\\\cdot sin \\\\theta ) = x \\\\cdot cos \\\\theta - y \\\\cdot sin \\\\theta\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`y' = r \\\\cdot sin ( \\\\varphi + \\\\theta ) = r \\\\cdot ( sin \\\\varphi \\\\cdot cos \\\\theta + cos \\\\varphi \\\\cdot sin \\\\theta ) = x \\\\cdot sin \\\\theta + y \\\\cdot cos \\\\theta\n`}</MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Rotate point based on a center point `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`(xc, yc)`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`x' =  x \\\\cdot cos \\\\theta - y \\\\cdot sin \\\\theta + xc\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components} parentName=\"blockquote\"><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`y' = x \\\\cdot sin \\\\theta + y \\\\cdot cos \\\\theta + yc\n`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Point in polygon`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In fact, there're two well-known \"point in polygon\" algorithms: `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`winding number`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`crossing number`}</MDXTag>{`, however, I will only talk about `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`winding number`}</MDXTag>{`, here are reasons:`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`/`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Rule`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Suitable Scene`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"strong\" components={components} parentName=\"td\">{`Winding`}</MDXTag>{` number`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"a\" components={components} parentName=\"td\" props={{\"href\":\"https://en.wikipedia.org/wiki/Nonzero-rule\"}}>{`Nonezero-rule`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`All polygons`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Crossing Number`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"a\" components={components} parentName=\"td\" props={{\"href\":\"https://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\"}}>{`Even-odd rule`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Polygons with simple curves`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As we can see above, `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`crossing number`}</MDXTag>{` is not suitable for all polygons.`}</MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Winding number`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://upload.wikimedia.org/wikipedia/commons/8/8f/Winding_Number_Around_Point.svg\",\"alt\":\"Image\"}}></MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`Draw an `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`infinite ray`}</MDXTag>{` from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`P`}</MDXTag>{` crossing polygon, then count each `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`vertex`}</MDXTag>{`, here's the key: suppose we start at any point on polygon path and end at the same point to draw polygon `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`counterclockwise`}</MDXTag>{`, if the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vector`}</MDXTag>{` intersected the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`special vertex`}</MDXTag>{`(intersected by infinite ray and polygon) is `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`upward`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`wn`}</MDXTag>{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`adds `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`1`}</MDXTag></MDXTag>{`, otherwise if the track intersected vertex is `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`downward`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`wn`}</MDXTag>{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`subtracts `}<MDXTag name=\"inlineCode\" components={components} parentName=\"strong\">{`1`}</MDXTag></MDXTag>{`. If the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`wn`}</MDXTag>{` of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`P`}</MDXTag>{` is not `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{`, then `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`P`}</MDXTag>{` is `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`inside`}</MDXTag>{` of polygon, otherwise `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`P`}</MDXTag>{` is `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`outside`}</MDXTag>{`.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`Main javascript(typescript) `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`codes`}</MDXTag>{`(If you want to see whole detail code, visit `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/Terry-Su/Geometry-Algorithm/blob/master/src/core/calcPointInPolygon.ts\"}}>{`here`}</MDXTag>{`):`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-ts\"}}>{`/**\n * Check if point P is inside of polygon with winding number algorithm\n * Algorithm: http://geomalgorithms.com/a03-_inclusion.html\n * @param {Point2D} P point P\n * @param {Point2D[]} polygonVertices vertices of polygon path in clockwise or counterclockwise order\n */\nfunction pointInPolygonWindingNumber(\n  P: Point2D,\n  polygonVertices: Point2D[]\n) {\n  /**\n   * Winding nunebr\n   */\n  let wn = 0\n\n  const points: Point2D[] = polygonVertices\n\n  for ( let i: number = 0; i < points.length - 1; i++ ) {\n    const V0: Point2D = points[ i ]\n    const V1: Point2D = points[ i + 1 ]\n\n    const { x: x0, y: y0 }: Point2D = V0\n    const { x: x1, y: y1 }: Point2D = V1\n    const { x: xp, y: yp }: Point2D = P\n\n    /**\n     * Upward\n     */\n    if ( y0 <= yp && y1 > yp && isLeft( V0, V1, P ) ) {\n      wn = wn + 1\n    }\n    /**\n     * Downward\n     */\n    if ( y0 > yp && y1 <= yp && isRight( V0, V1, P ) ) {\n      wn = wn - 1\n    }\n  }\n\n  const pointOnPolygonPath: boolean = isPointOnPolygonPath( P, points )\n  const res: boolean = pointOnPolygonPath || wn !== 0\n\n  return res\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Matrix`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`I'm curious about matrices too, not only when learning geometry algorithms. Matrix, which like an magician, transforms geometry with its particular formula.`}</MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Translation`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`\\\\begin{bmatrix}\n   x' \\\\\\\\\n   y'\n\\\\end{bmatrix}\n=\n\\\\begin{bmatrix}\n   x \\\\\\\\\n   y\n\\\\end{bmatrix}\n+\n\\\\begin{bmatrix}\n   tx \\\\\\\\\n   ty\n\\\\end{bmatrix}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Scale`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`\\\\begin{bmatrix}\n   x' \\\\\\\\\n   y'\n\\\\end{bmatrix}\n=\n\\\\begin{bmatrix}\n   S _ x & 0 \\\\\\\\\n   0 & S _ y\n\\\\end{bmatrix}\n\\\\begin{bmatrix}\n   x \\\\\\\\\n   y\n\\\\end{bmatrix}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Rotation`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`\\\\begin{bmatrix}\n   x' \\\\\\\\\n   y'\n\\\\end{bmatrix}\n=\n\\\\begin{bmatrix}\n  cos \\\\theta & -sin \\\\theta \\\\\\\\\n  sin \\\\theta & cos \\\\theta\n\\\\end{bmatrix}\n\\\\begin{bmatrix}\n   x \\\\\\\\\n   y\n\\\\end{bmatrix}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Formulas`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are plenty of geometry algorithms, however, I only list several alogorithms which are `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`frequently used`}</MDXTag>{` above. Maybe, I say maybe, I will add new algorithms in this blog if I find new commonly used algorithm in the future.\nNevertheless, I'll still list some `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`practical`}</MDXTag>{` formulas which can be used for geometry calculation.`}</MDXTag>\n<MDXTag name=\"h5\" components={components}>{`The Cosine Law`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Suppose there are vector v and w`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`| v \\\\pm w | ^ 2 = | v | ^ 2 \\\\pm 2 | v | | w | cos( \\\\theta ) + | w | ^ 2\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h5\" components={components}>{`The Dot Product`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`One vector multiply the other vector:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`v \\\\cdot w = | v | | w | cos ( \\\\theta )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h5\" components={components}>{`The 2D Perp Product`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`v \\\\perp w = | v | | w | sin ( \\\\theta )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Computing area`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Parallelogram`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`A ( \\\\Box ) = | v \\\\perp w | \n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`    = |v| |w| sin( \\\\theta )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Triangles`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`A ( \\\\vartriangle ) = | v \\\\perp w | / 2t\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`    = |v| |w| sin( \\\\theta ) / 2\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h5\" components={components}>{`Lines formula`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Type-Parametric`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`P(t) = P _ 0 + t v _ L \n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Line equations`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`P ( t ) = P _ 0 + t v _ L \n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`    = P _ 0 + t ( P _ 1 - P _ 0 )\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`    = ( 1 - t ) P _ 0 + t P _ 1\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-math\"}}>{`    = ( x _ 0 + t cos \\\\theta , y _ 0 + t sin \\\\theta ) \n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`It's easy to learn and use a geometry library, however, it's `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`limited`}</MDXTag>{` when we want to build a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`large`}</MDXTag>{` or complex even just `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`a little complex project`}</MDXTag>{`. Grasping geometry algorithms will make it possible for us to create `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`flexible`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`large`}</MDXTag>{` geometry projects.`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Reference`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`[0]`}{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Transformation:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.tutorialspoint.com/computer_graphics/2d_transformation.htm\"}}>{`https://www.tutorialspoint.com/computer_graphics/2d_transformation.htm`}</MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`[1]`}{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Point in polygon1:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://en.wikipedia.org/wiki/Point_in_polygon\"}}>{`https://en.wikipedia.org/wiki/Point_in_polygon`}</MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`[2]`}{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Point in polygon2:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://geomalgorithms.com/a03-_inclusion.html\"}}>{`http://geomalgorithms.com/a03-_inclusion.html`}</MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`[3]`}{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Nonezero-rule:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://en.wikipedia.org/wiki/Nonzero-rule\"}}>{`https://en.wikipedia.org/wiki/Nonzero-rule`}</MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`[4]`}{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Even-odd rule:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\"}}>{`https://en.wikipedia.org/wiki/Even%E2%80%93odd_rule`}</MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`[5]`}{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Computing area:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://geomalgorithms.com/a01-_area.html\"}}>{`http://geomalgorithms.com/a01-_area.html`}</MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`[6]`}{` `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Line formula:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://geomalgorithms.com/a02-_lines.html\"}}>{`http://geomalgorithms.com/a02-_lines.html`}</MDXTag>{`  `}</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1518401220000,"comment":5,"availableOtherLocales":[],"componentTextMap":{},"siteTitle":"Geometry Algorithms in Javascript(Terry Su Blog)","siteMetaDescription":" Geometry Algorithms in Javascript Recently, I've been learning geo algorithms for developing a geometry library. However, I found that... (Terry Su Blog)","categoryTitle":"Category","postTimeTitle":"Post Time","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","endingWords":"article.endingWords","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"Terry Su Blog","siteMetaDescription":"Terry Su's original front-end technology blog 4 years front-end shares popular front-end technology JavaScript ReactJS","categoryNewest":"Latest Blogs","navArticles":"ARTICLES","navAbout":"ABOUT"},"articleTexts":{"endingWordsExtra":"**Welcome to [star and subscribe](https://github.com/Terry-Su/blogs), to read my latest original front end technology blogs.**","qrcodeImageUrl":"","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","category":"Category","postTime":"Post Time","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","commentOnGithub":"Comment (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>Welcome to <a href=\"https://github.com/Terry-Su/blogs\">star and subscribe</a>, to read my latest original front end technology blogs.</strong></p>"}
