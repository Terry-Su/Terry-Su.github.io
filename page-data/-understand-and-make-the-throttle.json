{"pathnameRoot":"/","authorUrl":"https://github.com/Terry-Su","locale":"en","logoTitle":"Terry Su","noteIsAutoTranslated":"This page is translated automatically.","copyright":{"left":"Copyright © 2017-","center":"Terry Su","right":"ALL RIGHTS RESERVED"},"blogGithub":"https://github.com/Terry-Su/blogs","id":"understand-and-make-the-throttle","title":"Understand and Make the Throttle","path":"Technology/FrontEnd/JavaScript","route":"/understand-and-make-the-throttle","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`The principle of throttling (shunt) is similar to that of anti-shake (de-shake). This article mainly discusses throttling, mirroring articles:`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://terry-su.github.io/understand-and-make-the-debounce\"}}>{`Anti - shake - understanding, practice and implementation`}</MDXTag>{`.The main purpose of the separate discussion of control and control is to let some readers who are not familiar with control and control can grasp them one by one.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`How to implement throttling in code is also an important point. This paper adopts the method of step-by-step, first draw a flowchart of the case, and then write the throttling function code according to the logic of the flowchart.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Throttling case`}</MDXTag>\n<br/>\n<iframe src=\"https://terry-su.github.io/BlogCDN/iframes/js/throttle/mousemove/index.html?mode=result\" ></iframe>\n<MDXTag name=\"p\" components={components}>{`Mousemove events are frequently triggered when the mouse moves. The top is in unthrottled mode, and each mousemove trigger draws a dot. On the bottom is the throttling mode. Although mosuemove is triggered many times when the mouse moves, it only draws the dots in a limited time interval.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Understand and implement throttling`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From the above example, we can get a basic understanding of the role of throttling: frequently triggered events, event handlers only execute once in a certain time interval.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`But how does the throttle function do that? The above scheme is taken as an example and its flow chart is drawn as follows.  `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Core parameter:\n1. The interval time\n2. The timer`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`graph TB\nstart --> IF1{Whether the timer is empty}\n\nIF1 --> |is| A(Draw the dot)\nA --> B(Add a timer, After the The interval time after, Clear timer)\nB --> The end of the\n\nIF1 --> |no| The end of the\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The fractional flow function is realized according to the flow chart：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`function throttle( func, wait ) {\n  let timer\n\n  function throttled( ...args ) {\n    const self = this\n\n    if ( timer == null ) {\n      invokeFunc()\n      addTimer()\n    }\n\n    function addTimer() {\n      timer = setTimeout( () => {\n        clearTimer()\n      }, wait )\n    }\n\n    function invokeFunc() {\n      func.apply( self, args )\n    }\n  }\n\n  return throttled\n\n  function clearTimer() {\n    clearTimeout( timer )\n    timer = null\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`\bNext, implement the above example with the throttling function you wrote`}</MDXTag>\n<iframe src=\"https://terry-su.github.io/BlogCDN/iframes/js/throttle/test-mousemove/index.html?mode=result\" ></iframe>\n<MDXTag name=\"h2\" components={components}>{`Application scenarios`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Unlimited scroll bars`}</MDXTag>\n<iframe src=\"https://terry-su.github.io/BlogCDN/iframes/js/throttle/infinite-scrolling/index.html?mode=result\" ></iframe>\n<MDXTag name=\"h2\" components={components}>{`conclusion`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Similar to throttling and stabilization, both can effectively optimize system performance, but using business scenarios makes a difference：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Anti-shake can be used for events that are triggered multiple times (such as text box input text one by one), or for events that are triggered frequently (such as resizing a window).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Throttling is mostly used for frequently triggered events such as scroll bars.`}</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1537439220000,"comment":3,"availableOtherLocales":["zh_CN"],"importedCodes":"","siteTitle":"Understand and Make the Throttle(Terry Su Blog)","siteMetaDescription":" Understand and Make the Throttle The principle of throttling (shunt) is similar to that of anti-shake (de-shake). This article mainly... (Terry Su Blog)","categoryTitle":"Category","postTimeTitle":"Post Time","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","endingWords":"article.endingWords","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"Terry Su Blog","siteMetaDescription":"Terry Su's original front-end technology blog 4 years front-end shares popular front-end technology JavaScript ReactJS","categoryNewest":"Latest Blogs","navArticles":"ARTICLES","navAbout":"ABOUT"},"articleTexts":{"endingWordsExtra":"**Welcome to [star and subscribe](https://github.com/Terry-Su/blogs), to read my latest original front end technology blogs.**","qrcodeImageUrl":"","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","category":"Category","postTime":"Post Time","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","commentOnGithub":"Comment (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>Welcome to <a href=\"https://github.com/Terry-Su/blogs\">star and subscribe</a>, to read my latest original front end technology blogs.</strong></p>"}
