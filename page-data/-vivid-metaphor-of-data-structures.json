{"pathnameRoot":"/","authorUrl":"https://github.com/Terry-Su","locale":"en","logoTitle":"Terry Su","noteIsAutoTranslated":"This page is translated automatically.","copyright":{"left":"Copyright Â© 2017-","center":"Terry Su","right":"ALL RIGHTS RESERVED"},"blogGithub":"https://github.com/Terry-Su/blogs","id":"vivid-metaphor-of-data-structures","title":"Vivid Metaphor of Data Structures","path":"Technology/Data Structure","route":"/vivid-metaphor-of-data-structures","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Data structures are abstract, sometimes hard to be understood. However, vivid metaphor helps us to master them better.  `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Data strcutres included in this article:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`stack`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`queue`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`linked list`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Stack`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First, let's see stack's core features:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`push( item )`}</MDXTag>{`: push an item at end`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`pop()`}</MDXTag>{`: remove an item from end`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`peek()`}</MDXTag>{`: get the end element`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`I found a `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://jshilpa.com/stacks-in-a-nutshell-learning-through-examples/\"}}>{`very visual example`}</MDXTag>{` before, that's an open chips box.   `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`And to corresponse with our development habbit(count index from left to right), I push it down.   `}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://terry-su.github.io/BlogCDN/images/pringles.jpg\",\"alt\":null}}></MDXTag>{`      `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`we push a chip into box: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`push( chip )`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`we take a chip from box: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`pop()`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`current top chip in box: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`peek()`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Queue`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Queue is similiar to stack, but easiler to learn.   `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Queue's key features are:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`enqueue( item )`}</MDXTag>{`: push an item at end `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`dequeue()`}</MDXTag>{`: remove an item from front`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`peekFront()`}</MDXTag>{`: get the front item`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`peekEnd()`}</MDXTag>{`: get the end item`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Suppose there're some people queuing to use ATM.  `}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://terry-su.github.io/BlogCDN/images/queue-for-atm.png\",\"alt\":null}}></MDXTag>{`  `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`at end comes a new guy: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`enqueue( person )`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`front guy has done and leave: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`dequeue()`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`current front guy: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`peekFront()`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`current last guy: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`peekEnd()`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Linked List`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Linked list consists of nodes, and each node can have a link to another link, like a chain.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://terry-su.github.io/BlogCDN/images/chain.jpg\",\"alt\":null}}></MDXTag>{`  `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Mock its main concept via codes:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const nodeC = { link: null }\nconst nodeB = { link: nodeC }\nconst nodeA = { link: nodeB }\n\nconst linkedList = { head: nodeA }\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1547699940000,"comment":15,"availableOtherLocales":[],"componentTextMap":{},"siteTitle":"Vivid Metaphor of Data Structures(Terry Su Blog)","siteMetaDescription":" Vivid Metaphor of Data Structures Data structures are abstract, sometimes hard to be understood. However, vivid metaphor helps us to m... (Terry Su Blog)","categoryTitle":"Category","postTimeTitle":"Post Time","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","endingWords":"Thanks for your reading. If you're from other platforms and like this article, please feel free to add thumb up, collection and sharing on the original platform, so that more people can see this article, which is also the biggest encouragement and support for me!","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"Terry Su Blog","siteMetaDescription":"Terry Su's original front-end technology blog 4 years front-end shares popular front-end technology JavaScript ReactJS","categoryNewest":"Latest Blogs","navArticles":"ARTICLES","navAbout":"ABOUT"},"articleTexts":{"endingWords":"Thanks for your reading. If you're from other platforms and like this article, please feel free to add thumb up, collection and sharing on the original platform, so that more people can see this article, which is also the biggest encouragement and support for me!","endingWordsExtra":"**Welcome to [subscribe](https://github.com/Terry-Su/blogs), to read my latest original front end techinique blog.**","qrcodeImageUrl":"","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","category":"Category","postTime":"Post Time","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","commentOnGithub":"Comment (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>Welcome to <a href=\"https://github.com/Terry-Su/blogs\">subscribe</a>, to read my latest original front end techinique blog.</strong></p>"}
