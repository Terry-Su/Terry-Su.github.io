{"pathnameRoot":"/cn/","authorUrl":"https://github.com/Terry-Su","locale":"zh_CN","logoTitle":"苏溪云","noteIsAutoTranslated":"本文为自动翻译。","copyright":{"left":"版权 © 2017-","center":"苏溪云","right":"保留所有权利"},"blogGithub":"https://github.com/Terry-Su/blogs-cn","id":"cn/understand-and-make-the-throttle","title":"节流 - 理解，实践与实现","path":"Technology/FrontEnd/JavaScript","route":"/cn/understand-and-make-the-throttle","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`节流(分流)，与防抖（去抖）实现原理相似。本文主要讨论节流，镜像文章：`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://terry-su.github.io/cn/understand-and-make-the-debounce\"}}>{`防抖 - 理解，实践与实现`}</MDXTag>{`。分开讨论防抖和节流，主要是为了让一些还不太了解节流防抖的读者能够有针对性地，逐一掌握它们。`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>{`\n`}{`如何用代码实现节流也是一个要点。本文采用循序渐进地方式，先绘制一个案例的流程图，再根据流程图的逻辑编写节流功能代码。`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`节流案例`}</MDXTag>\n<br/>\n<iframe src=\"https://terry-su.github.io/BlogCDN/iframes/js/throttle/mousemove/index.html?mode=result\" ></iframe>\n<MDXTag name=\"p\" components={components}>{`当鼠标移动时，mousemove事件频繁被触发。上方为未节流模式，每一次mousemove触发都会绘制一个圆点。而下方为节流模式，尽管mosuemove在鼠标移动时被多次触发，但只有在限定时间间隔才会绘制圆点。`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`理解和实现节流`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`通过上方案例，可以基本了解节流的作用: 频繁触发的事件，事件处理函数在一定的时间间隔内只执行一次。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`不过节流函数是如何做到的？ 以上方案例为例，绘制其流程图如下。  `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`核心参数:\n1. 间隔时长\n2. 计时器`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`graph TB\n开始 --> IF1{计时器是否为空}\n\nIF1 --> |是| A(绘制圆点)\nA --> B(添加计时器, 过了 间隔时长 后, 清除计时器)\nB --> 结束\n\nIF1 --> |否| 结束\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`根据流程图的思路实现分流函数：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`function throttle( func, wait ) {\n  let timer\n\n  function throttled( ...args ) {\n    const self = this\n\n    if ( timer == null ) {\n      invokeFunc()\n      addTimer()\n    }\n\n    function addTimer() {\n      timer = setTimeout( () => {\n        clearTimer()\n      }, wait )\n    }\n\n    function invokeFunc() {\n      func.apply( self, args )\n    }\n  }\n\n  return throttled\n\n  function clearTimer() {\n    clearTimeout( timer )\n    timer = null\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`\b接下来，\b用编写的节流函数实现上方案例`}</MDXTag>\n<iframe src=\"https://terry-su.github.io/BlogCDN/iframes/js/throttle/test-mousemove/index.html?mode=result\" ></iframe>\n<MDXTag name=\"h2\" components={components}>{`应用场景`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`无限的滚动条`}</MDXTag>\n<iframe src=\"https://terry-su.github.io/BlogCDN/iframes/js/throttle/infinite-scrolling/index.html?mode=result\" ></iframe>\n<MDXTag name=\"h2\" components={components}>{`总结`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`节流和防抖类似，都能有效优化系统性能，不过使用业务场景有所区别：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`防抖既可用于在多次触发的事件（如文本框逐个输入文字），也可用于在频繁触发的事件（如调整窗口尺寸）。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`节流多只用在频繁触发的事件（如滚动滚动条）上。`}</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1551495600000,"comment":3,"availableOtherLocales":["en"],"componentTextMap":{},"siteTitle":"节流 - 理解，实践与实现(苏溪云的博客)","siteMetaDescription":" 节流 - 理解，实践与实现 节流(分流)，与防抖（去抖）实现原理相似。本文主要讨论节流，镜像文章：防抖 - 理解，实践与实现。分开讨论防抖和节流，主要是为了让一些还不太了解节流防抖的读者能够有针对性地，逐一掌握它们。\n如何用代码... (苏溪云的博客)","categoryTitle":"分类","postTimeTitle":"发布时间","reprintingNote":"作者版权所有，转载请注明出处，禁止商业转载","endingWords":"article.endingWords","githubCommentBase":"https://api.github.com/repos/terry-su/blogs-cn/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs-cn/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"苏溪云的博客","siteMetaDescription":"苏溪云的原创前端技术博客 4年前端 分享主流前端技术 JavaScript ReactJS","categoryNewest":"最新文章","navArticles":"所有文章","navAbout":"关于作者"},"articleTexts":{"endingWordsExtra":"**欢迎[Star和订阅](https://github.com/Terry-Su/blogs-cn)，第一时间阅读我的最新原创前端技术博客。**","qrcodeImageUrl":"","reprintingNote":"作者版权所有，转载请注明出处，禁止商业转载","category":"分类","postTime":"发布时间","githubIssuePageBase":"https://github.com/Terry-Su/blogs-cn/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs-cn/issues/","commentOnGithub":"添加评论 (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>欢迎<a href=\"https://github.com/Terry-Su/blogs-cn\">Star和订阅</a>，第一时间阅读我的最新原创前端技术博客。</strong></p>"}
