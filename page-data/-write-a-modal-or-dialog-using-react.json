{"pathnameRoot":"/","authorUrl":"https://github.com/Terry-Su","locale":"en","logoTitle":"Terry Su","noteIsAutoTranslated":"This page is translated automatically.","copyright":{"left":"Copyright Â© 2017-","center":"Terry Su","right":"ALL RIGHTS RESERVED"},"blogGithub":"https://github.com/Terry-Su/blogs","id":"write-a-modal-or-dialog-using-react","title":"Write a Modal or Dialog Using React","path":"Technology/FrontEnd/React","route":"/write-a-modal-or-dialog-using-react","text":"\n\nconst layoutProps = {\n  \n};\nclass MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/23733477/56563695-f17a9b00-65de-11e9-969f-f98977e7e9a1.png\",\"alt\":null}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Having planned to write a dialog using React for a long time, now, it's the time to fullfill the promise. As a matter of fact, it's pretty easy.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The key is the use of React interface `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React.createPortal(element, domContainer)`}</MDXTag>{`, which inserts the mounted node of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`element`}</MDXTag>{` into `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`domContainer`}</MDXTag>{`(ofter `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`document.body`}</MDXTag>{`) only `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`once`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`So, we're able to create a dialog or modal like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\"}}>{`function Dialog() {\n    return React.createPortal( <div>Dialog contents</div>, document.body )\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`And a new `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`div`}</MDXTag>{` will come out under the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`body`}</MDXTag>{`:\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://user-images.githubusercontent.com/23733477/56560376-d86dec00-65d6-11e9-95f5-bcfb31fcf16f.png\",\"alt\":\"image\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A complete demo:`}</MDXTag>\n<ModalApp />\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\"}}>{`class Modal extends React.Component {\n  render() {\n    const {\n      visible,\n      onClose\n    } = this.props\n    return visible && ReactDOM.createPortal(<StyledModalRoot>\n      <div className=\"box\">\n        Content\n        <br/>\n        <button onClick={onClose}>Close</button>\n      </div>\n    </StyledModalRoot>, document.body)\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    visibleModal: false\n  }\n  showModal = () => this.setState( { visibleModal: true } )\n  handleCloseModal = () => this.setState( { visibleModal: false } )\n  render() {\n    const { visibleModal } = this.state\n    return <div style={{padding: '20px'}}>\n    <button onClick={ this.showModal }>Show Modal</button>\n    <Modal visible={visibleModal} onClose={ this.handleCloseModal } />\n  </div>\n  }\n}\n\nconst StyledModalRoot = styled.div\\`\n  position: fixed;\n  z-index: 1001;\n  left: 0;\n  top: 0;\n  display: grid;\n  place-items: center;\n  width: 100%;\n  height: 100%;\n  background: rgba( 0, 0, 0, 0.2 );\n\n  >.box {\n    position: relative;\n    display: grid;\n    place-items: center;\n    width: 80%;\n    height: 80%;\n    background: white;\n    border-radius: 10px;\n    box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12);\n  }\n\\`\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Isn't it pretty simple? `}</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\nrender( <MDXContent /> )\n  ","postTime":1556002800000,"comment":17,"availableOtherLocales":["zh_CN"],"componentTextMap":{"ModalApp":"\nclass Modal extends React.Component {\n  render() {\n    const {\n      visible,\n      onClose\n    } = this.props\n    return visible && ReactDOM.createPortal(<StyledModalRoot>\n      <div className=\"box\">\n        Content\n        <br/>\n        <button onClick={onClose}>Close</button>\n      </div>\n    </StyledModalRoot>, document.body)\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    visibleModal: false\n  }\n  showModal = () => this.setState( { visibleModal: true } )\n  handleCloseModal = () => this.setState( { visibleModal: false } )\n  render() {\n    const { visibleModal } = this.state\n    return <div style={{padding: '20px'}}>\n    <button onClick={ this.showModal }>Show Modal</button>\n    <Modal visible={visibleModal} onClose={ this.handleCloseModal } />\n  </div>\n  }\n}\n\nconst StyledModalRoot = styled.div`\n  position: fixed;\n  z-index: 1001;\n  left: 0;\n  top: 0;\n  display: grid;\n  place-items: center;\n  width: 100%;\n  height: 100%;\n  background: rgba( 0, 0, 0, 0.2 );\n\n  >.box {\n    position: relative;\n    display: grid;\n    place-items: center;\n    width: 80%;\n    height: 80%;\n    background: white;\n    border-radius: 10px;\n    box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12);\n  }\n`\n\nrender( <App /> )"},"siteTitle":"Write a Modal or Dialog Using React(Terry Su Blog)","siteMetaDescription":" Write a Modal or Dialog Using React \n\nHaving planned to write a dialog using React for a long time, now, it's the time to fullfill the p... (Terry Su Blog)","categoryTitle":"Category","postTimeTitle":"Post Time","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","endingWords":"Thanks for your reading. If you're from other platforms and like this article, please feel free to add thumb up, collection and sharing on the original platform, so that more people can see this article, which is also the biggest encouragement and support for me!","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","remarkDisqusComment":"https://terrysu.disqus.com/embed.js","texts":{"siteTitle":"Terry Su Blog","siteMetaDescription":"Terry Su's original front-end technology blog 4 years front-end shares popular front-end technology JavaScript ReactJS","categoryNewest":"Latest Blogs","navArticles":"ARTICLES","navAbout":"ABOUT"},"articleTexts":{"endingWords":"Thanks for your reading. If you're from other platforms and like this article, please feel free to add thumb up, collection and sharing on the original platform, so that more people can see this article, which is also the biggest encouragement and support for me!","endingWordsExtra":"**Welcome to [subscribe](https://github.com/Terry-Su/blogs), to read my latest original front end techinique blog.**","qrcodeImageUrl":"","reprintingNote":"Author all rights reserved reprint please indicate the source no commercial reprint","category":"Category","postTime":"Post Time","githubIssuePageBase":"https://github.com/Terry-Su/blogs/issues/","githubCommentBase":"https://api.github.com/repos/terry-su/blogs/issues/","commentOnGithub":"Comment (by Github Issues)"},"markedEndingWordsExtra":"<p><strong>Welcome to <a href=\"https://github.com/Terry-Su/blogs\">subscribe</a>, to read my latest original front end techinique blog.</strong></p>"}
